"undefined"==typeof jQuery.migrateMute&&(jQuery.migrateMute=!0),function(e,t){"use strict";function i(i){var n=t.console;o[i]||(o[i]=!0,e.migrateWarnings.push(i),n&&n.warn&&!e.migrateMute&&(n.warn("JQMIGRATE: "+i),e.migrateTrace&&n.trace&&n.trace()))}function n(e,t,n,o){Object.defineProperty(e,t,{configurable:!0,enumerable:!0,get:function(){return i(o),n}})}e.migrateVersion="3.0.0",function(){var i=t.console&&t.console.log&&function(){t.console.log.apply(t.console,arguments)},n=/^[12]\./;i&&(e&&!n.test(e.fn.jquery)||i("JQMIGRATE: jQuery 3.0.0+ REQUIRED"),e.migrateWarnings&&i("JQMIGRATE: Migrate plugin loaded multiple times"),i("JQMIGRATE: Migrate is installed"+(e.migrateMute?"":" with logging active")+", version "+e.migrateVersion))}();var o={};e.migrateWarnings=[],void 0===e.migrateTrace&&(e.migrateTrace=!0),e.migrateReset=function(){o={},e.migrateWarnings.length=0},"BackCompat"===document.compatMode&&i("jQuery is not compatible with Quirks Mode");var r=e.fn.init,s=e.isNumeric,a=e.find,l=/\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/,c=/\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/g;e.fn.init=function(e){var t=Array.prototype.slice.call(arguments);return"string"==typeof e&&"#"===e&&(i("jQuery( '#' ) is not a valid selector"),t[0]=[]),r.apply(this,t)},e.fn.init.prototype=e.fn,e.find=function(e){var t=Array.prototype.slice.call(arguments);if("string"==typeof e&&l.test(e))try{document.querySelector(e)}catch(n){e=e.replace(c,function(e,t,i,n){return"["+t+i+'"'+n+'"]'});try{document.querySelector(e),i("Attribute selector with '#' must be quoted: "+t[0]),t[0]=e}catch(e){i("Attribute selector with '#' was not fixed: "+t[0])}}return a.apply(this,t)};var u;for(u in a)Object.prototype.hasOwnProperty.call(a,u)&&(e.find[u]=a[u]);e.fn.size=function(){return i("jQuery.fn.size() is deprecated; use the .length property"),this.length},e.parseJSON=function(){return i("jQuery.parseJSON is deprecated; use JSON.parse"),JSON.parse.apply(null,arguments)},e.isNumeric=function(t){function n(t){var i=t&&t.toString();return!e.isArray(t)&&i-parseFloat(i)+1>=0}var o=s(t),r=n(t);return o!==r&&i("jQuery.isNumeric() should not be called on constructed objects"),r},n(e,"unique",e.uniqueSort,"jQuery.unique is deprecated, use jQuery.uniqueSort"),n(e.expr,"filters",e.expr.pseudos,"jQuery.expr.filters is now jQuery.expr.pseudos"),n(e.expr,":",e.expr.pseudos,'jQuery.expr[":"] is now jQuery.expr.pseudos');var d=e.ajax;e.ajax=function(){var e=d.apply(this,arguments);return e.promise&&(n(e,"success",e.done,"jQXHR.success is deprecated and removed"),n(e,"error",e.fail,"jQXHR.error is deprecated and removed"),n(e,"complete",e.always,"jQXHR.complete is deprecated and removed")),e};var h=e.fn.removeAttr,p=e.fn.toggleClass,f=/\S+/g;e.fn.removeAttr=function(t){var n=this;return e.each(t.match(f),function(t,o){e.expr.match.bool.test(o)&&(i("jQuery.fn.removeAttr no longer sets boolean properties: "+o),n.prop(o,!1))}),h.apply(this,arguments)},e.fn.toggleClass=function(t){return void 0!==t&&"boolean"!=typeof t?p.apply(this,arguments):(i("jQuery.fn.toggleClass( boolean ) is deprecated"),this.each(function(){var i=this.getAttribute&&this.getAttribute("class")||"";i&&e.data(this,"__className__",i),this.setAttribute&&this.setAttribute("class",i||t===!1?"":e.data(this,"__className__")||"")}))};var m=!1;e.swap&&e.each(["height","width","reliableMarginRight"],function(t,i){var n=e.cssHooks[i]&&e.cssHooks[i].get;n&&(e.cssHooks[i].get=function(){var e;return m=!0,e=n.apply(this,arguments),m=!1,e})}),e.swap=function(e,t,n,o){var r,s,a={};m||i("jQuery.swap() is undocumented and deprecated");for(s in t)a[s]=e.style[s],e.style[s]=t[s];r=n.apply(e,o||[]);for(s in t)e.style[s]=a[s];return r};var y=e.data;e.data=function(t,n,o){var r;return n&&n!==e.camelCase(n)&&(r=e.hasData(t)&&y.call(this,t),r&&n in r)?(i("jQuery.data() always sets/gets camelCased names: "+n),arguments.length>2&&(r[n]=o),r[n]):y.apply(this,arguments)};var g=e.Tween.prototype.run;e.Tween.prototype.run=function(t){e.easing[this.easing].length>1&&(i('easing function "jQuery.easing.'+this.easing.toString()+'" should use only first argument'),e.easing[this.easing]=e.easing[this.easing].bind(e.easing,t,this.options.duration*t,0,1,this.options.duration)),g.apply(this,arguments)};var v=e.fn.load,w=e.event.fix;e.event.props=[],e.event.fixHooks={},e.event.fix=function(t){var n,o=t.type,r=this.fixHooks[o],s=e.event.props;if(s.length)for(i("jQuery.event.props are deprecated and removed: "+s.join());s.length;)e.event.addProp(s.pop());if(r&&!r._migrated_&&(r._migrated_=!0,i("jQuery.event.fixHooks are deprecated and removed: "+o),(s=r.props)&&s.length))for(;s.length;)e.event.addProp(s.pop());return n=w.call(this,t),r&&r.filter?r.filter(n,t):n},e.each(["load","unload","error"],function(t,n){e.fn[n]=function(){var e=Array.prototype.slice.call(arguments,0);return"load"===n&&"string"==typeof e[0]?v.apply(this,e):(i("jQuery.fn."+n+"() is deprecated"),e.splice(0,0,n),arguments.length?this.on.apply(this,e):(this.triggerHandler.apply(this,e),this))}}),e(function(){e(document).triggerHandler("ready")}),e.event.special.ready={setup:function(){this===document&&i("'ready' event is deprecated")}},e.fn.extend({bind:function(e,t,n){return i("jQuery.fn.bind() is deprecated"),this.on(e,null,t,n)},unbind:function(e,t){return i("jQuery.fn.unbind() is deprecated"),this.off(e,null,t)},delegate:function(e,t,n,o){return i("jQuery.fn.delegate() is deprecated"),this.on(t,e,n,o)},undelegate:function(e,t,n){return i("jQuery.fn.undelegate() is deprecated"),1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var b=e.fn.offset;e.fn.offset=function(){var t,n=this[0],o={top:0,left:0};return n&&n.nodeType?(t=(n.ownerDocument||document).documentElement,e.contains(t,n)?b.apply(this,arguments):(i("jQuery.fn.offset() requires an element connected to a document"),o)):(i("jQuery.fn.offset() requires a valid DOM element"),o)};var x=e.param;e.param=function(t,n){var o=e.ajaxSettings&&e.ajaxSettings.traditional;return void 0===n&&o&&(i("jQuery.param() no longer uses jQuery.ajaxSettings.traditional"),n=o),x.call(this,t,n)};var j=e.fn.andSelf||e.fn.addBack;e.fn.andSelf=function(){return i("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"),j.apply(this,arguments)};var $=e.Deferred,S=[["resolve","done",e.Callbacks("once memory"),e.Callbacks("once memory"),"resolved"],["reject","fail",e.Callbacks("once memory"),e.Callbacks("once memory"),"rejected"],["notify","progress",e.Callbacks("memory"),e.Callbacks("memory")]];e.Deferred=function(t){var n=$(),o=n.promise();return n.pipe=o.pipe=function(){var t=arguments;return i("deferred.pipe() is deprecated"),e.Deferred(function(i){e.each(S,function(r,s){var a=e.isFunction(t[r])&&t[r];n[s[1]](function(){var t=a&&a.apply(this,arguments);t&&e.isFunction(t.promise)?t.promise().done(i.resolve).fail(i.reject).progress(i.notify):i[s[0]+"With"](this===o?i.promise():this,a?[t]:arguments)})}),t=null}).promise()},t&&t.call(n,n),n}}(jQuery,window),function(){function e(){k.keyboardSupport&&p("keydown",r)}function t(){if(!P&&document.body){P=!0;var t=document.body,i=document.documentElement,n=window.innerHeight,o=t.scrollHeight;if(O=document.compatMode.indexOf("CSS")>=0?i:t,S=t,e(),top!=self)M=!0;else if(te&&o>n&&(t.offsetHeight<=n||i.offsetHeight<=n)){var r=document.createElement("div");r.style.cssText="position:absolute; z-index:-10000; top:0; left:0; right:0; height:"+O.scrollHeight+"px",document.body.appendChild(r);var s;C=function(){s||(s=setTimeout(function(){A||(r.style.height="0",r.style.height=O.scrollHeight+"px",s=null)},500))},setTimeout(C,10),p("resize",C);var a={attributes:!0,childList:!0,characterData:!1};if(T=new Y(C),T.observe(t,a),O.offsetHeight<=n){var l=document.createElement("div");l.style.clear="both",t.appendChild(l)}}k.fixedBackground||A||(t.style.backgroundAttachment="scroll",i.style.backgroundAttachment="scroll")}}function i(){T&&T.disconnect(),f(B,o),f("mousedown",s),f("keydown",r),f("resize",C),f("load",t)}function n(e,t,i){if(y(t,i),1!=k.accelerationMax){var n=Date.now(),o=n-q;if(o<k.accelerationDelta){var r=(1+50/o)/2;r>1&&(r=Math.min(r,k.accelerationMax),t*=r,i*=r)}q=Date.now()}if(z.push({x:t,y:i,lastX:t<0?.99:-.99,lastY:i<0?.99:-.99,start:Date.now()}),!L){var s=e===document.body,a=function(n){for(var o=Date.now(),r=0,l=0,c=0;c<z.length;c++){var u=z[c],d=o-u.start,h=d>=k.animationTime,p=h?1:d/k.animationTime;k.pulseAlgorithm&&(p=j(p));var f=u.x*p-u.lastX>>0,m=u.y*p-u.lastY>>0;r+=f,l+=m,u.lastX+=f,u.lastY+=m,h&&(z.splice(c,1),c--)}s?window.scrollBy(r,l):(r&&(e.scrollLeft+=r),l&&(e.scrollTop+=l)),t||i||(z=[]),z.length?X(a,e,1e3/k.frameRate+1):L=!1};X(a,e,0),L=!0}}function o(e){P||t();var i=e.target;if(e.defaultPrevented||e.ctrlKey)return!0;if(m(S,"embed")||m(i,"embed")&&/\.pdf/i.test(i.src)||m(S,"object")||i.shadowRoot)return!0;var o=-e.wheelDeltaX||e.deltaX||0,r=-e.wheelDeltaY||e.deltaY||0;I&&(e.wheelDeltaX&&v(e.wheelDeltaX,120)&&(o=-120*(e.wheelDeltaX/Math.abs(e.wheelDeltaX))),e.wheelDeltaY&&v(e.wheelDeltaY,120)&&(r=-120*(e.wheelDeltaY/Math.abs(e.wheelDeltaY)))),o||r||(r=-e.wheelDelta||0),1===e.deltaMode&&(o*=40,r*=40);var s=c(i);return s?!!g(r)||(Math.abs(o)>1.2&&(o*=k.stepSize/120),Math.abs(r)>1.2&&(r*=k.stepSize/120),n(s,o,r),e.preventDefault(),void a()):!M||!G||(Object.defineProperty(e,"target",{value:window.frameElement}),parent.wheel(e))}function r(e){var t=e.target,i=e.ctrlKey||e.altKey||e.metaKey||e.shiftKey&&e.keyCode!==R.spacebar;document.body.contains(S)||(S=document.activeElement);var o=/^(textarea|select|embed|object)$/i,r=/^(button|submit|radio|checkbox|file|color|image)$/i;if(e.defaultPrevented||o.test(t.nodeName)||m(t,"input")&&!r.test(t.type)||m(S,"video")||b(e)||t.isContentEditable||i)return!0;if((m(t,"button")||m(t,"input")&&r.test(t.type))&&e.keyCode===R.spacebar)return!0;if(m(t,"input")&&"radio"==t.type&&_[e.keyCode])return!0;var s,l=0,u=0,d=c(S);if(!d)return!M||!G||parent.keydown(e);var h=d.clientHeight;switch(d==document.body&&(h=window.innerHeight),e.keyCode){case R.up:u=-k.arrowScroll;break;case R.down:u=k.arrowScroll;break;case R.spacebar:s=e.shiftKey?1:-1,u=-s*h*.9;break;case R.pageup:u=.9*-h;break;case R.pagedown:u=.9*h;break;case R.home:u=-d.scrollTop;break;case R.end:var p=d.scrollHeight-d.scrollTop,f=p-h;u=f>0?f+10:0;break;case R.left:l=-k.arrowScroll;break;case R.right:l=k.arrowScroll;break;default:return!0}n(d,l,u),e.preventDefault(),a()}function s(e){S=e.target}function a(){clearTimeout(E),E=setInterval(function(){V={}},1e3)}function l(e,t){for(var i=e.length;i--;)V[F(e[i])]=t;return t}function c(e){var t=[],i=document.body,n=O.scrollHeight;do{var o=V[F(e)];if(o)return l(t,o);if(t.push(e),n===e.scrollHeight){var r=d(O)&&d(i),s=r||h(O);if(M&&u(O)||!M&&s)return l(t,J())}else if(u(e)&&h(e))return l(t,e)}while(e=e.parentElement)}function u(e){return e.clientHeight+10<e.scrollHeight}function d(e){var t=getComputedStyle(e,"").getPropertyValue("overflow-y");return"hidden"!==t}function h(e){var t=getComputedStyle(e,"").getPropertyValue("overflow-y");return"scroll"===t||"auto"===t}function p(e,t){window.addEventListener(e,t,!1)}function f(e,t){window.removeEventListener(e,t,!1)}function m(e,t){return(e.nodeName||"").toLowerCase()===t.toLowerCase()}function y(e,t){e=e>0?1:-1,t=t>0?1:-1,Q.x===e&&Q.y===t||(Q.x=e,Q.y=t,z=[],q=0)}function g(e){if(e)return H.length||(H=[e,e,e]),e=Math.abs(e),H.push(e),H.shift(),clearTimeout(N),N=setTimeout(function(){try{localStorage.SS_deltaBuffer=H.join(",")}catch(e){}},1e3),!w(120)&&!w(100)}function v(e,t){return Math.floor(e/t)==e/t}function w(e){return v(H[0],e)&&v(H[1],e)&&v(H[2],e)}function b(e){var t=e.target,i=!1;if(document.URL.indexOf("www.youtube.com/watch")!=-1)do if(i=t.classList&&t.classList.contains("html5-video-controls"))break;while(t=t.parentNode);return i}function x(e){var t,i,n;return e*=k.pulseScale,e<1?t=e-(1-Math.exp(-e)):(i=Math.exp(-1),e-=1,n=1-Math.exp(-e),t=i+n*(1-i)),t*k.pulseNormalize}function j(e){return e>=1?1:e<=0?0:(1==k.pulseNormalize&&(k.pulseNormalize/=x(1)),x(e))}function $(e){for(var t in e)D.hasOwnProperty(t)&&(k[t]=e[t])}var S,T,C,E,N,D={frameRate:150,animationTime:400,stepSize:100,pulseAlgorithm:!0,pulseScale:4,pulseNormalize:1,accelerationDelta:50,accelerationMax:3,keyboardSupport:!0,arrowScroll:50,fixedBackground:!0,excluded:""},k=D,A=!1,M=!1,Q={x:0,y:0},P=!1,O=document.documentElement,H=[],I=/^Mac/.test(navigator.platform),R={left:37,up:38,right:39,down:40,spacebar:32,pageup:33,pagedown:34,end:35,home:36},_={37:1,38:1,39:1,40:1},z=[],L=!1,q=Date.now(),F=function(){var e=0;return function(t){return t.uniqueID||(t.uniqueID=e++)}}(),V={};if(window.localStorage&&localStorage.SS_deltaBuffer)try{H=localStorage.SS_deltaBuffer.split(",")}catch(e){}var B,X=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e,t,i){window.setTimeout(e,i||1e3/60)}}(),Y=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,J=function(){var e;return function(){if(!e){var t=document.createElement("div");t.style.cssText="height:10000px;width:1px;",document.body.appendChild(t);var i=document.body.scrollTop;document.documentElement.scrollTop;window.scrollBy(0,3),e=document.body.scrollTop!=i?document.body:document.documentElement,window.scrollBy(0,-3),document.body.removeChild(t)}return e}}(),W=window.navigator.userAgent,K=/Edge/.test(W),G=/chrome/i.test(W)&&!K,U=/safari/i.test(W)&&!K,Z=/mobile/i.test(W),ee=/Windows NT 6.1/i.test(W)&&/rv:11/i.test(W),te=U&&(/Version\/8/i.test(W)||/Version\/9/i.test(W)),ie=(G||U||ee)&&!Z;"onwheel"in document.createElement("div")?B="wheel":"onmousewheel"in document.createElement("div")&&(B="mousewheel"),B&&ie&&(p(B,o),p("mousedown",s),p("load",t)),$.destroy=i,window.SmoothScrollOptions&&$(window.SmoothScrollOptions),"function"==typeof define&&define.amd?define(function(){return $}):"object"==typeof exports?module.exports=$:window.SmoothScroll=$}(),!function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){"use strict";function t(){var e=document.createElement("input");return e.setAttribute("type","range"),"text"!==e.type}function i(e,t){var i=Array.prototype.slice.call(arguments,2);return setTimeout(function(){return e.apply(null,i)},t)}function n(e,t){return t=t||100,function(){if(!e.debouncing){var i=Array.prototype.slice.apply(arguments);e.lastReturnVal=e.apply(window,i),e.debouncing=!0}return clearTimeout(e.debounceTimeout),e.debounceTimeout=setTimeout(function(){e.debouncing=!1},t),e.lastReturnVal}}function o(e){return e&&(0===e.offsetWidth||0===e.offsetHeight||e.open===!1)}function r(e){for(var t=[],i=e.parentNode;o(i);)t.push(i),i=i.parentNode;return t}function s(e,t){function i(e){"undefined"!=typeof e.open&&(e.open=!e.open)}var n=r(e),o=n.length,s=[],a=e[t];if(o){for(var l=0;l<o;l++)s[l]=n[l].style.cssText,n[l].style.setProperty?n[l].style.setProperty("display","block","important"):n[l].style.cssText+=";display: block !important",n[l].style.height="0",n[l].style.overflow="hidden",n[l].style.visibility="hidden",i(n[l]);a=e[t];for(var c=0;c<o;c++)n[c].style.cssText=s[c],i(n[c])}return a}function a(e,t){var i=parseFloat(e);return Number.isNaN(i)?t:i}function l(e){return e.charAt(0).toUpperCase()+e.substr(1)}function c(t,o){if(this.$window=e(window),this.$document=e(document),this.$element=e(t),this.options=e.extend({},p,o),this.polyfill=this.options.polyfill,this.orientation=this.$element[0].getAttribute("data-orientation")||this.options.orientation,this.onInit=this.options.onInit,this.onSlide=this.options.onSlide,this.onSlideEnd=this.options.onSlideEnd,this.DIMENSION=f.orientation[this.orientation].dimension,this.DIRECTION=f.orientation[this.orientation].direction,this.DIRECTION_STYLE=f.orientation[this.orientation].directionStyle,this.COORDINATE=f.orientation[this.orientation].coordinate,this.polyfill&&h)return!1;this.identifier="js-"+u+"-"+d++,this.startEvent=this.options.startEvent.join("."+this.identifier+" ")+"."+this.identifier,this.moveEvent=this.options.moveEvent.join("."+this.identifier+" ")+"."+this.identifier,this.endEvent=this.options.endEvent.join("."+this.identifier+" ")+"."+this.identifier,this.toFixed=(this.step+"").replace(".","").length-1,this.$fill=e('<div class="'+this.options.fillClass+'" />'),this.$handle=e('<div class="'+this.options.handleClass+'" />'),this.$range=e('<div class="'+this.options.rangeClass+" "+this.options[this.orientation+"Class"]+'" id="'+this.identifier+'" />').insertAfter(this.$element).prepend(this.$fill,this.$handle),this.$element.css({position:"absolute",width:"1px",height:"1px",overflow:"hidden",opacity:"0"}),this.handleDown=e.proxy(this.handleDown,this),this.handleMove=e.proxy(this.handleMove,this),this.handleEnd=e.proxy(this.handleEnd,this),this.init();var r=this;this.$window.on("resize."+this.identifier,n(function(){i(function(){r.update(!1,!1)},300)},20)),this.$document.on(this.startEvent,"#"+this.identifier+":not(."+this.options.disabledClass+")",this.handleDown),this.$element.on("change."+this.identifier,function(e,t){if(!t||t.origin!==r.identifier){var i=e.target.value,n=r.getPositionFromValue(i);r.setPosition(n)}})}Number.isNaN=Number.isNaN||function(e){return"number"==typeof e&&e!==e};var u="rangeslider",d=0,h=t(),p={polyfill:!0,orientation:"horizontal",rangeClass:"rangeslider",disabledClass:"rangeslider--disabled",activeClass:"rangeslider--active",horizontalClass:"rangeslider--horizontal",verticalClass:"rangeslider--vertical",fillClass:"rangeslider__fill",handleClass:"rangeslider__handle",startEvent:["mousedown","touchstart","pointerdown"],moveEvent:["mousemove","touchmove","pointermove"],endEvent:["mouseup","touchend","pointerup"]},f={orientation:{horizontal:{dimension:"width",direction:"left",directionStyle:"left",coordinate:"x"},vertical:{dimension:"height",direction:"top",directionStyle:"bottom",coordinate:"y"}}};return c.prototype.init=function(){this.update(!0,!1),this.onInit&&"function"==typeof this.onInit&&this.onInit()},c.prototype.update=function(e,t){e=e||!1,e&&(this.min=a(this.$element[0].getAttribute("min"),0),this.max=a(this.$element[0].getAttribute("max"),100),this.value=a(this.$element[0].value,Math.round(this.min+(this.max-this.min)/2)),this.step=a(this.$element[0].getAttribute("step"),1)),this.handleDimension=s(this.$handle[0],"offset"+l(this.DIMENSION)),this.rangeDimension=s(this.$range[0],"offset"+l(this.DIMENSION)),this.maxHandlePos=this.rangeDimension-this.handleDimension,this.grabPos=this.handleDimension/2,this.position=this.getPositionFromValue(this.value),this.$element[0].disabled?this.$range.addClass(this.options.disabledClass):this.$range.removeClass(this.options.disabledClass),this.setPosition(this.position,t)},c.prototype.handleDown=function(e){if(e.preventDefault(),this.$document.on(this.moveEvent,this.handleMove),this.$document.on(this.endEvent,this.handleEnd),this.$range.addClass(this.options.activeClass),!((" "+e.target.className+" ").replace(/[\n\t]/g," ").indexOf(this.options.handleClass)>-1)){var t=this.getRelativePosition(e),i=this.$range[0].getBoundingClientRect()[this.DIRECTION],n=this.getPositionFromNode(this.$handle[0])-i,o="vertical"===this.orientation?this.maxHandlePos-(t-this.grabPos):t-this.grabPos;this.setPosition(o),t>=n&&t<n+this.handleDimension&&(this.grabPos=t-n)}},c.prototype.handleMove=function(e){e.preventDefault();var t=this.getRelativePosition(e),i="vertical"===this.orientation?this.maxHandlePos-(t-this.grabPos):t-this.grabPos;this.setPosition(i)},c.prototype.handleEnd=function(e){e.preventDefault(),this.$document.off(this.moveEvent,this.handleMove),this.$document.off(this.endEvent,this.handleEnd),this.$range.removeClass(this.options.activeClass),this.$element.trigger("change",{origin:this.identifier}),this.onSlideEnd&&"function"==typeof this.onSlideEnd&&this.onSlideEnd(this.position,this.value)},c.prototype.cap=function(e,t,i){return e<t?t:e>i?i:e},c.prototype.setPosition=function(e,t){var i,n;void 0===t&&(t=!0),i=this.getValueFromPosition(this.cap(e,0,this.maxHandlePos)),n=this.getPositionFromValue(i),this.$fill[0].style[this.DIMENSION]=n+this.grabPos+"px",this.$handle[0].style[this.DIRECTION_STYLE]=n+"px",this.setValue(i),this.position=n,this.value=i,t&&this.onSlide&&"function"==typeof this.onSlide&&this.onSlide(n,i)},c.prototype.getPositionFromNode=function(e){for(var t=0;null!==e;)t+=e.offsetLeft,e=e.offsetParent;return t},c.prototype.getRelativePosition=function(e){var t=l(this.COORDINATE),i=this.$range[0].getBoundingClientRect()[this.DIRECTION],n=0;return"undefined"!=typeof e.originalEvent["client"+t]?n=e.originalEvent["client"+t]:e.originalEvent.touches&&e.originalEvent.touches[0]&&"undefined"!=typeof e.originalEvent.touches[0]["client"+t]?n=e.originalEvent.touches[0]["client"+t]:e.currentPoint&&"undefined"!=typeof e.currentPoint[this.COORDINATE]&&(n=e.currentPoint[this.COORDINATE]),n-i},c.prototype.getPositionFromValue=function(e){var t,i;return t=(e-this.min)/(this.max-this.min),i=Number.isNaN(t)?0:t*this.maxHandlePos},c.prototype.getValueFromPosition=function(e){var t,i;return t=e/(this.maxHandlePos||1),i=this.step*Math.round(t*(this.max-this.min)/this.step)+this.min,Number(i.toFixed(this.toFixed))},c.prototype.setValue=function(e){e===this.value&&""!==this.$element[0].value||this.$element.val(e).trigger("input",{origin:this.identifier})},c.prototype.destroy=function(){this.$document.off("."+this.identifier),this.$window.off("."+this.identifier),this.$element.off("."+this.identifier).removeAttr("style").removeData("plugin_"+u),this.$range&&this.$range.length&&this.$range[0].parentNode.removeChild(this.$range[0])},e.fn[u]=function(t){var i=Array.prototype.slice.call(arguments,1);return this.each(function(){var n=e(this),o=n.data("plugin_"+u);o||n.data("plugin_"+u,o=new c(this,t)),"string"==typeof t&&o[t].apply(o,i)})},"rangeslider.js is available in jQuery context e.g $(selector).rangeslider(options);"}),!function(e){var t={init:function(i){return this.each(function(){var i=e.extend({menu:e(this)},i);e(document).on("scroll.changeActiveNav",{myOptions:i},t.scroll),e("a[href^=#]").on("click.changeActiveNav",{myOptions:i},t.click)})},destroy:function(){return this.each(function(){e(document).off(".changeActiveNav")})},scroll:function(t){var i=t.data.myOptions.menu,n=e(document).scrollTop();i.find("a").each(function(){var t=e(this).attr("href"),o=e(t);o.position().top<=n&&o.position().top+o.outerHeight()>n?(i.find("a.active").removeClass("active"),e(this).addClass("active")):e(this).removeClass("active")})},click:function(i){i.preventDefault();var n=i.data.myOptions.menu;e(document).off("scroll.changeActiveNav"),n.find("a.active").removeClass("active"),e(this).addClass("active");var o=e(this).attr("href"),r=e(o);e("html, body").animate({scrollTop:r.offset().top},500,function(){window.location.hash=o,e(document).on("scroll.changeActiveNav",{myOptions:i.data.myOptions},t.scroll)})}};e.fn.changeActiveNav=function(i){return t[i]?t[i].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof i&&i?void e.error("Method "+i+" does not exist on jQuery.changeActiveNav"):t.init.apply(this,arguments)}}(jQuery),$(function(){function e(){var e={zoom:11,scrollwheel:!1,zoomControl:!1,scaleControl:!1,center:new google.maps.LatLng(40.67,-73.94),styles:[{featureType:"administrative",elementType:"all",stylers:[{visibility:"on"},{lightness:33}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2e5d4"},{lightness:"6"},{saturation:"48"},{gamma:"5.15"}]},{featureType:"landscape",elementType:"labels.text.fill",stylers:[{invert_lightness:!0},{visibility:"on"},{color:"#ff0000"}]},{featureType:"landscape",elementType:"labels.text.stroke",stylers:[{invert_lightness:!0}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#c5dac6"}]},{featureType:"poi.park",elementType:"labels",stylers:[{visibility:"on"},{lightness:20}]},{featureType:"road",elementType:"all",stylers:[{lightness:20}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#c5c6c6"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#e4d7c6"}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#fbfaf7"}]},{featureType:"water",elementType:"all",stylers:[{visibility:"on"},{color:"#acbcc9"}]}]},t=document.getElementById("js-map"),i=new google.maps.Map(t,e);new google.maps.Marker({position:new google.maps.LatLng(40.67,-73.94),map:i,title:"Snazzy!"});i.addListener("click",function(){i.setOptions({scrollwheel:!0})}),i.addListener("mouseout",function(){i.setOptions({scrollwheel:!1})})}$("#js-show-main-menu").on("click",function(){var e=$("#js-main-menu");e.slideToggle()}),$(document).on("scroll",function(){var e=$("#js-main-header-wrapper").innerHeight()-300,t=$(document).scrollTop(),i=$("#js-main-header"),n=$("#js-logo"),o=$("#js-main-menu"),r=$(".js-main-menu__item");t>e?(i.css({backgroundColor:"rgba(0, 92, 138, 0.76)"}),n.css({width:"50px",height:"50px",fontSize:"14px",lineHeight:"50px"}),o.css({height:"50px"}),r.css({lineHeight:"50px"})):(i.css({backgroundColor:"transparent"}),n.css({width:"100px",height:"100px",fontSize:"24px",lineHeight:"100px"}),o.css({height:"100px"}),r.css({lineHeight:"100px"}))}),$(".js-main-menu__item, #js-logo").on("click",function(e){e.preventDefault(),$(".js-main-menu__item").removeClass("active"),$(this).addClass("active");var t=$(this).attr("href"),i=$(t).offset().top;$("html, body").animate({scrollTop:i},2e3)}),$("#js-main-menu").changeActiveNav(),$("#js-main-slider").slick({dots:!0,fade:!0,speed:3e3,autoplay:!0,autoplaySpeed:2e4});var t=$(".js-range");t.rangeslider({polyfill:!1,onInit:function(){t.each(function(){var e=$(this),t=e.attr("data-range");$(t).text(e.val()+"%")})},onSlide:function(e,t){var i=$(this)[0].$element,n=i.attr("data-range");$(n).text(t+"%")}}),$("#js-no-bg-slider").slick({dots:!0,fade:!0,speed:3e3,autoplay:!0,autoplaySpeed:2e4,arrows:!1}),$("#js-portfolio-slider").slick({dots:!0,speed:1e3,autoplay:!0,autoplaySpeed:2e4,arrows:!0}),$(".form-group").focusin(function(){$(this).children(".fa").css({color:"#f39c12"})}),$(".form-group").focusout(function(){$(".form-group .fa").css({color:"#737373"})}),google.maps.event.addDomListener(window,"load",e)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
